[tox]
envlist =
    clean,
    check,
    {py312,py313},
    report

[testenv]
basepython =
    py312: {env:TOXPYTHON:python3.12}
    py313: {env:TOXPYTHON:python3.13}
    {py312,docs,spell}: {env:TOXPYTHON:python3.12}
    {clean,check,report}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PYDEVD_DISABLE_FILE_VALIDATION=1
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest_bdd
    pytest-cov
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv tests}

[testenv:check]
deps =
    click
    opencv-python
    docutils
    FindSystemFontsFilename
    flake8
    isort
    mypy
    numpy
    pathvalidate
    pillow
    pygments
    pytest  # stubs for mypy
    readme-renderer
    types-setuptools  # stubs for mypy
skip_install = true
ignore_errors = true
setenv =
    MYPYPATH={toxinidir}/src
commands =
    flake8 src tests
    isort --check-only --diff src tests
    mypy src tests

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
setenv =
    PYTHONPATH={toxinidir}/src:
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs


[coverage:paths]
source =
    src
    */site-packages

[coverage:run]
branch = true
source =
    src
    tests
omit =
    */__main__.py
parallel = true

[coverage:report]
show_missing = true
precision = 2
omit =
    */__main__.py
    *migrations*

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage xml
    coverage html

[testenv:clean]
commands =
    coverage erase
skip_install = true
deps = coverage

[testenv:build]
basepython = python3
skip_install = true
deps =
    hatch
commands =
    hatch build

[testenv:sonar]
skip_install = true
allowlist_externals = sonar-scanner
deps =
    click
    pathvalidate
    pylint
# setenv =
#     PYTHONPATH = {toxworkdir}/py312-nocov/lib/python3.12/site-packages/
commands =
    pylint --output-format=parseable --output=pylint-report.txt --exit-zero src tests
    sonar-scanner -Dsonar.login={env:SONAR_AUTH_TOKEN:}

[testenv:dev]
usedevelop = True
sitepackages = True
deps =
    ipykernel
    numpy
    opencv-python
    pylint
setenv =
    PYTHONPATH={toxinidir}/tests:{toxinidir}/src:
commands =
    python3 -m ipykernel install --user --name poppy_raspi_thymio

[testenv:jupyter]
usedevelop = True
deps =
    ipykernel
    nbmake
    pytest
    pytest_bdd
setenv =
    PYTHONPATH={toxinidir}/tests:{toxinidir}/src:
commands =
    python3 -m ipykernel install --user --name poppy_raspi_thymio
    pytest --nbmake --nbmake-kernel=poppy_raspi_thymio {toxinidir}/poppy_raspi_thymio.ipynb
